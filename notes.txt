Bradley Taniguchi
Notes for project

1. 2^16=65536 bytes
read from a file containting LOGICAL ADDRESSES
using TLB and page table 
will translate each logical address to its corresponding physical addreses.
and output the value of the byte stored at the translated physical address.
The goal is to simulate the STEPS involved in translating logical to physical address.

1. be able to read from BOTH files
====

NOTE Given 32-bit numbers, take 16bits of each logical address
16-8 = PAGE_NUMBER
8-0 = OFFSET

==End part of output
Number of Translated Addresses = 1000
Page Faults = 244
Page Fault Rate = 0.244
TLB Hits = 54
TLB Hit Rate = 0.054
======
FIRST VALUE of 20 is correct
2^8 entries on page table
page size of 2^8 bytes

16 entries on TLB
Frame size of 2^8 bytes
=========
Handling page faults [from book]
implement demand paging
backing sore is represented as BACKINGSTORE
when page fault occurs:

read in a 256-byte page from file backing store, and store it in an available page frame
in physical memory.  
=========GIVEN SOME STUFF
Read in the thing as char, cast to Int will cast to left.

CHANGE PageTable to hold integers, for each page number
============
I FIGURED OUT THE PROBLEM
1. This ISN'T a memory manager, its just a memory reader.
2. Load the ENTIRE BACKING STORE into the array in order.
3. Translate the virtual address